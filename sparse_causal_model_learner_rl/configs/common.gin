import sparse_causal_model_learner_rl.trainable.decoder
import sparse_causal_model_learner_rl.trainable.reconstructor
import sparse_causal_model_learner_rl.trainable.model
import sparse_causal_model_learner_rl.config
import sparse_causal_model_learner_rl.annealer.threshold
import sparse_causal_model_learner_rl.loss.losses
import sparse_causal_model_learner_rl.loss.optimizer
import sparse_causal_model_learner_rl.metrics.nnz
import sparse_causal_model_learner_rl.metrics.loss_thresholded
import gin_tune

gin_tune_config.log_sys_usage = True
tune_run.verbose = False
tune_run.resources_per_trial = {'cpu': 1}

Config.train_steps = 20000
Config.env_steps = 1000

Config.loss_every = 500
Config.graph_every = 500
Config.checkpoint_every = 5000
Config.report_every = 20
Config.metrics_every = 20

Config.keep_history = True
# Config.max_history_size = 10000

LinearDecoder.use_batchnorm = True

Config.model = @LinearModel
Config.decoder = @LinearDecoder
Config.reconstructor = @LinearReconstructor

Config.feature_shape = (30,)

ThresholdAnnealer.fit_threshold = 1e-3
ThresholdAnnealer.factor = 0.5
ThresholdAnnealer.adjust_every = 100

Config._update_function = [@ThresholdAnnealer]

reconstruction_loss_inverse_model.rn_threshold = 100

Config.losses = {'fit': {'fcn': @fit_loss, 'coeff': 1.0},
                 'sparsity': {'fcn': @sparsity_loss, 'coeff': 1e-5},
                 'reconstruction': {'fcn': @reconstruction_loss_inverse_model, 'coeff': 1.0}
                }

loss_thresholded.eps = 1e-3
loss_thresholded.loss = @fit_loss
loss_thresholded.delta = True

nnz.eps = 1e-3
Config.metrics = {'nnz': @nnz, 'sparsity_gap_fit': @loss_thresholded}

opt1/Optimizer.name = 'Adam'
opt1/Optimizer.lr = 1e-3

Config.optimizers = {'opt1': @opt1/Optimizer}
Config.execution = {'opt1': ['fit', 'sparsity', 'reconstruction']}

LinearModel.use_bias = False

tune_run.verbose = True
tune_run.queue_trials = True

sparsity_loss.ord = 1
