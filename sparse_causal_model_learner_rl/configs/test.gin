import sparse_causal_model_learner_rl.trainable.decoder
import sparse_causal_model_learner_rl.trainable.reconstructor
import sparse_causal_model_learner_rl.trainable.model
import sparse_causal_model_learner_rl.config
import sparse_causal_model_learner_rl.annealer.threshold
import sparse_causal_model_learner_rl.loss.losses
import sparse_causal_model_learner_rl.loss.optimizer
import sparse_causal_model_learner_rl.metrics.nnz
import sparse_causal_model_learner_rl.metrics.episode_reward
import sparse_causal_model_learner_rl.metrics.loss_thresholded
include 'common.gin'

import gin_tune

Config.learner_cls = "sparse_causal_model_learner_rl.learners.rl_learner.CausalModelLearnerRL"

gin_tune_config.num_workers = 0
gin_tune_config.log_sys_usage = True
tune_run.verbose = True

Config.train_steps = 100
Config.env_steps = 1000

Config.loss_every = 49
Config.graph_every = 20
Config.keep_history = True

Config.model = @LinearModel
Config.decoder = @LinearDecoder
Config.reconstructor = @LinearReconstructor
Config.feature_shape = (10, )

ThresholdAnnealer.fit_threshold = 1e-2
Config._update_function = []

Config.losses = {'fit': {'fcn': @fit_loss, 'coeff': 1.0},
                 'sparsity': {'fcn': @sparsity_loss, 'coeff': 1e-1},
                 'reconstruction': {'fcn': @reconstruction_loss, 'coeff': 1.0}
                }

loss_thresholded.eps = 1e-3
loss_thresholded.loss = @fit_loss

nnz.eps = 1e-3
Config.metrics = {'nnz': @nnz, 'fit_thresholded': @loss_thresholded}

opt1/Optimizer.name = 'Adam'
opt1/Optimizer.lr = 1e-3
Config.optimizers = {'opt1': @opt1/Optimizer}
Config.execution = {'opt1': ['reconstruction', 'fit', 'sparsity']}

LinearModel.use_bias = False
